// <auto-generated />
using System;
using FarmManager.Persistence.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmManager.Persistence.EF.Migrations
{
    [DbContext(typeof(FarmManagerDbContext))]
    partial class FarmManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.AnimalDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("LoteId")
                        .HasColumnType("integer");

                    b.Property<int>("RegisterNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("LoteId");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.BullDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.ToTable("Bulls", (string)null);
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.CalfDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Gender")
                        .HasColumnType("boolean");

                    b.Property<int>("MotherNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.ToTable("Calves", (string)null);
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.CowDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasCalf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMilking")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPregnant")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.ToTable("Cows", (string)null);
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.LoteDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Lotes", (string)null);
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.AnimalDataModel", b =>
                {
                    b.HasOne("FarmManager.Persistence.DataModels.Store.LoteDataModel", "Lote")
                        .WithMany("Animals")
                        .HasForeignKey("LoteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.BullDataModel", b =>
                {
                    b.HasOne("FarmManager.Persistence.DataModels.Store.AnimalDataModel", "Animal")
                        .WithOne()
                        .HasForeignKey("FarmManager.Persistence.DataModels.Store.BullDataModel", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.CalfDataModel", b =>
                {
                    b.HasOne("FarmManager.Persistence.DataModels.Store.AnimalDataModel", "Animal")
                        .WithOne()
                        .HasForeignKey("FarmManager.Persistence.DataModels.Store.CalfDataModel", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.CowDataModel", b =>
                {
                    b.HasOne("FarmManager.Persistence.DataModels.Store.AnimalDataModel", "Animal")
                        .WithOne()
                        .HasForeignKey("FarmManager.Persistence.DataModels.Store.CowDataModel", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("FarmManager.Persistence.DataModels.Store.LoteDataModel", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
